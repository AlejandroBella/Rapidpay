// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RapidPay.Data;

#nullable disable

namespace RapidPay.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20230821175945_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("RapidPay.Data.Entities.CardHolder", b =>
                {
                    b.Property<int>("IdNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("LastUpdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdNumber");

                    b.HasIndex("IdTypeId");

                    b.ToTable("CardHolders");
                });

            modelBuilder.Entity("RapidPay.Data.Entities.CreditCard", b =>
                {
                    b.Property<int>("IdTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("HolderIdNumber")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("LastUpdate")
                        .HasColumnType("TEXT");

                    b.Property<int>("PIN")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdTypeId", "Number");

                    b.HasIndex("HolderIdNumber");

                    b.ToTable("CreditCard");
                });

            modelBuilder.Entity("RapidPay.Data.Entities.IdType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("IdTypes");
                });

            modelBuilder.Entity("RapidPay.Data.Entities.CardHolder", b =>
                {
                    b.HasOne("RapidPay.Data.Entities.IdType", "IdType")
                        .WithMany()
                        .HasForeignKey("IdTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdType");
                });

            modelBuilder.Entity("RapidPay.Data.Entities.CreditCard", b =>
                {
                    b.HasOne("RapidPay.Data.Entities.CardHolder", "Holder")
                        .WithMany()
                        .HasForeignKey("HolderIdNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RapidPay.Data.Entities.IdType", "IdType")
                        .WithMany()
                        .HasForeignKey("IdTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Holder");

                    b.Navigation("IdType");
                });
#pragma warning restore 612, 618
        }
    }
}
