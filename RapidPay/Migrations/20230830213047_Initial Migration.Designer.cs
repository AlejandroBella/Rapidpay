// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RapidPay.Data;

#nullable disable

namespace RapidPay.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20230830213047_Initial Migration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("RapidPay.Data.Model.BalanceDetailModel", b =>
                {
                    b.Property<Guid>("DetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("Amount")
                        .HasColumnType("REAL");

                    b.Property<Guid>("BalanceId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.HasKey("DetailId");

                    b.HasIndex("BalanceId");

                    b.ToTable("BalanceDetail");
                });

            modelBuilder.Entity("RapidPay.Data.Model.BalanceModel", b =>
                {
                    b.Property<Guid>("BalanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("CurrentBalance")
                        .HasColumnType("REAL");

                    b.HasKey("BalanceId");

                    b.HasIndex("CardNumber")
                        .IsUnique();

                    b.ToTable("Balance");
                });

            modelBuilder.Entity("RapidPay.Data.Model.CardModel", b =>
                {
                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("HolderIdNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("TEXT");

                    b.Property<int>("PIN")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Number");

                    b.ToTable("CreditCard");
                });

            modelBuilder.Entity("RapidPay.Data.Model.BalanceDetailModel", b =>
                {
                    b.HasOne("RapidPay.Data.Model.BalanceModel", "Balance")
                        .WithMany("Detail")
                        .HasForeignKey("BalanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Balance");
                });

            modelBuilder.Entity("RapidPay.Data.Model.BalanceModel", b =>
                {
                    b.HasOne("RapidPay.Data.Model.CardModel", "Card")
                        .WithOne("Balance")
                        .HasForeignKey("RapidPay.Data.Model.BalanceModel", "CardNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");
                });

            modelBuilder.Entity("RapidPay.Data.Model.BalanceModel", b =>
                {
                    b.Navigation("Detail");
                });

            modelBuilder.Entity("RapidPay.Data.Model.CardModel", b =>
                {
                    b.Navigation("Balance")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
